project(QuaZip)
cmake_minimum_required(VERSION 2.6)

find_package(Qt5Core QUIET)
set(CMAKE_CXX_STANDARD 11)
set(QTCORE_LIBRARIES ${Qt5Core_LIBRARIES})
# if there is no QT_ROOT, try to deduce it from Qt QtCore include
if("${QT_ROOT}" STREQUAL "")
    set(QT_ROOT ${QT_QTCORE_INCLUDE_DIR}/../..)
endif()
include_directories(${Qt5Core_INCLUDE_DIRS})

macro(qt_wrap_cpp)
    qt5_wrap_cpp(${ARGN})
endmacro()

set( LIB_PRE_REQS "$ENV{INSTALL_PARENT_DIR}" CACHE PATH "Library pre-reqs installation directory.")
# Set IS_DEBUG and _dsuffix
set( IS_DEBUG FALSE)
set( _dsuffix "")
string( TOLOWER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_LOWER)
if( CMAKE_BUILD_TYPE_LOWER STREQUAL "debug")
    set( IS_DEBUG TRUE)
    set(_dsuffix "d")
endif()
unset( CMAKE_BUILD_TYPE_LOWER)

set( CMAKE_DEBUG_POSTFIX ${_dsuffix})
set( ZLIB_DIR "${LIB_PRE_REQS}/zlib" CACHE PATH "Path to ZLIB")
set( ZLIB_INCLUDE_DIRS "${ZLIB_DIR}/include" CACHE PATH "Path to ZLIB include directory")
set( ZLIB_LIBRARY_DIR "${ZLIB_DIR}/lib" CACHE PATH "Path to ZLIB lib directory")
set( ZLIB_LIBRARIES "${ZLIB_LIBRARY_DIR}/zlibstatic${_dsuffix}.lib")
set( ZLIB_DLL "${ZLIB_DIR}/bin/zlib${_dsuffix}.dll")

if ( NOT EXISTS ${ZLIB_DLL})
    message( FATAL_ERROR "Required dll ${ZLIB_DLL} missing!")
endif()
include_directories( "${ZLIB_INCLUDE_DIRS}")
link_directories( "${ZLIB_LIBRARY_DIR}")
message( STATUS "Zlib:       ${ZLIB_LIBRARIES}")


# All build libraries are moved to this directory
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

set(LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)")
set(LIB_DESTINATION "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}" CACHE STRING "Library directory name" FORCE)

add_subdirectory(quazip)

